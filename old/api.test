#%%

from api_wrapper import APIWrapper

api = APIWrapper()
for message in api.generate_completion('llama2', 'Why is the sky blue?'):
    if "response" in message:
        print(message["response"], end="")
        print(message["context"])


# %%

# Create a conversation between 2 different personas

# Create a recursive chatbot LLM to iterate on itself

# Create a text based game engine and an LLM that plays the game

# Create a chatbot that can use APIs/tools

# %%
from api_wrapper import APIWrapper
api = APIWrapper()
personas = ["mario", "einstein"]

template = """
{{- if .First }}
<<SYS>>
<s> <<SYS>>\n This is a conversation between {persona0} and {persona1}.
{{ .System }}
\n<</SYS>>\n\n
{{- end }}

[INST] {{ .Prompt }} [/INST]
"""

B_INST, E_INST = "[INST]", "[/INST]"


input(template.format(persona0=personas[0], persona1=personas[1]))

initial_message = "hi"
context = []
last_message = ""
for i in range(10):
    for persona in personas:

        if last_message:
            prompt = last_message
            last_message = ""

        else:
            prompt = initial_message
            print(prompt, end="")
        
        print(persona, end=": ")

        for message in api.generate_completion(persona,
                                                prompt, 
                                               context=context,
                                            #    template=template,  
                                               options={"temperature": 0.2}):
            if "response" in message:
                last_message += message["response"]
                print(message["response"], end="")

                # append the context to the next message
            # if "context" in message:
            #     context = message["context"]

        print()
    print()

# %%

from api_wrapper import APIWrapper
api = APIWrapper()
personas = ["mario2", "einstein2"]

B_INST, E_INST = "[INST] ", " [/INST]"

prompt = B_INST + "hi" + E_INST
last_message = ""

for i in range(10):
    for persona in personas:

        if i == 0 and persona == personas[0]:
            print(persona[-1], end=": ")
            print(prompt)
        
        print(persona, end=": ")
    
        for message in api.generate_completion(persona,
                                                prompt, 
                                               options={"temperature": 0.2}):
            if "response" in message:
                last_message += message["response"]
                print(message["response"], end="")

                # append the context to the next message
            # if "context" in message:
            #     context = message["context"]

        prompt = prompt + B_INST + last_message + E_INST

        print()
    print()
# %%
